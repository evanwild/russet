const Russet={_canvas:null,_ctx:null,scene:null,camera:null,width:0,height:0,_prevTime:0,_keysDown:new Set,mouse:{x:0,y:0},_tickFunc:null,init(){this._canvas=document.createElement("canvas");this._ctx=this._canvas.getContext("2d");this._handleResize();window.addEventListener("resize",this._handleResize.bind(this));window.addEventListener("mousemove",this._handleMousemove.bind(this));document.addEventListener("keydown",this._handleKeydown.bind(this));document.addEventListener("keyup",this._handleKeyup.bind(this));document.body.style.margin="0px";document.body.appendChild(this._canvas)},_handleResize(){this.width=window.innerWidth;this.height=window.innerHeight;this._canvas.width=this.width*window.devicePixelRatio;this._canvas.height=this.height*window.devicePixelRatio;this._canvas.style.width=`${this.width}px`;this._canvas.style.height=`${this.height}px`;this._ctx.scale(window.devicePixelRatio,window.devicePixelRatio)},_handleMousemove(t){this.mouse.x=t.clientX;this.mouse.y=t.clientY},_handleKeydown(t){if(t.repeat)return;this._keysDown.add(t.code)},_handleKeyup(t){this._keysDown.delete(t.code)},keyDown(t){return this._keysDown.has(t)},_tick(){if(this._tickFunc){const t=(performance.now()-this._prevTime)/1e3;this._tickFunc(t)}const t=Math.max(this.width/this.camera.width,this.height/this.camera.height);if(this.scene){this._ctx.fillStyle=this.scene.background;this._ctx.fillRect(0,0,this.width,this.height);this._ctx.save();this._ctx.translate(this.width/2,this.height/2);this._ctx.scale(t,t);this._ctx.translate(-this.camera.position.x,-this.camera.position.y);for(let t of this.scene.children){t.draw(this._ctx)}this._ctx.restore()}this._prevTime=performance.now();window.requestAnimationFrame(this._tick.bind(this))},startTicking(t){this._tickFunc=t;this._prevTime=performance.now();this._tick()}};class Scene{constructor(t,i,s="black"){this.width=t;this.height=i;this.background=s;this.children=[]}get center(){return{x:this.width/2,y:this.height/2}}makeGroup(){const t=new Group;this.children.push(t);return t}makeRect(t,i,s){const e=new Rect(t,i,s);this.children.push(e);return e}makeCircle(t,i){const s=new Circle(t,i);this.children.push(s);return s}makeLine(t,i,s,e){const h=new Line(t,i,s,e);this.children.push(h);return h}}class Camera{constructor(t,i,s){this.position=t;this.width=i;this.height=s}}class Rect{constructor(t,i,s){this.position=t;this.width=i;this.height=s;this.anchor={x:0,y:0};this.rotation=0;this.fill="white";this.stroke="white";this.lineWidth=0}draw(t){t.save();t.translate(this.position.x,this.position.y);t.rotate(this.rotation);t.beginPath();t.rect(-this.anchor.x,-this.anchor.y,this.width,this.height);if(this.fill){t.fillStyle=this.fill;t.fill()}if(this.stroke&&this.lineWidth){t.strokeStyle=this.stroke;t.lineWidth=this.lineWidth;t.stroke()}t.restore()}}class Circle{constructor(t,i){this.position=t;this.radius=i;this.anchor={x:0,y:0};this.rotation=0;this.fill="white";this.stroke="white";this.lineWidth=0}draw(t){t.save();t.translate(this.position.x,this.position.y);t.rotate(this.rotation);t.beginPath();t.arc(-this.anchor.x,-this.anchor.y,this.radius,0,2*Math.PI);if(this.fill){t.fillStyle=this.fill;t.fill()}if(this.stroke&&this.lineWidth){t.strokeStyle=this.stroke;t.lineWidth=this.lineWidth;t.stroke()}t.restore()}}class Line{constructor(t,i,s,e){this.x1=t;this.y1=i;this.x2=s;this.y2=e;this.anchor={x:0,y:0};this.rotation=0;this.stroke="white";this.lineWidth=0}draw(t){t.save();t.translate(this.x1,this.y1);t.rotate(this.rotation);t.beginPath();t.moveTo(-this.anchor.x,-this.anchor.y);t.lineTo(this.x2-this.x1-this.anchor.x,this.y2-this.y1-this.anchor.y);t.strokeStyle=this.stroke;t.lineWidth=this.lineWidth;t.stroke();t.restore()}}class Group{constructor(t=[]){this.children=t;this.position={x:0,y:0};this.anchor={x:0,y:0};this.scale=1;this.rotation=0}draw(t){t.save();t.translate(this.position.x,this.position.y);t.rotate(this.rotation);t.scale(this.scale,this.scale);t.translate(-this.anchor.x,-this.anchor.y);for(let i of this.children){i.draw(t)}t.restore()}makeGroup(){const t=new Group;this.children.push(t);return t}makeRect(t,i,s){const e=new Rect(t,i,s);this.children.push(e);return e}makeCircle(t,i){const s=new Circle(t,i);this.children.push(s);return s}makeLine(t,i,s,e){const h=new Line(t,i,s,e);this.children.push(h);return h}}